is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

setw -g mode-keys vi
set -g mouse on

unbind C-b
set-option -g prefix C-w
bind C-w send-prefix
set-option -g default-shell "${SHELL}"

set -g base-index 1
setw -g pane-base-index 1

setw -g word-separators ' @"=()[]_-:,.'
setw -ag word-separators "'"

set -g display-panes-time 2000
set -g display-time 4000
set -g focus-events on
set -g history-limit 1000000

unbind '"'
unbind %
bind v if-shell "$is_vim" "send-keys C-w 'v'" "split-window -h"
bind s if-shell "$is_vim" "send-keys C-w 's'" "split-window -v"
bind c if-shell "$is_vim" "send-keys C-w 'c'" "new-window"

bind C-n if-shell "$is_vim" "send-keys C-n" "next-window"
bind C-m if-shell "$is_vim" "send-keys C-m" "previous-window"

bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

unbind [
bind Escape if-shell "$is_vim" "send-keys C-w Escape" "copy-mode"
unbind p
bind p paste-buffer
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-selection
bind -n C-s setw synchronize-panes

unbind '{'
unbind '}'
bind h if-shell "$is_vim" "send-keys C-w 'h'" "select-pane -L"
bind j if-shell "$is_vim" "send-keys C-w 'j'" "select-pane -D"
bind k if-shell "$is_vim" "send-keys C-w 'k'" "select-pane -U"
bind l if-shell "$is_vim" "send-keys C-w 'l'" "select-pane -R"
bind H if-shell "$is_vim" "send-keys C-w 'H'" "swap-pane -D"
bind J if-shell "$is_vim" "send-keys C-w 'J'" "swap-pane -U"
bind K if-shell "$is_vim" "send-keys C-w 'K'" "swap-pane -D"
bind L if-shell "$is_vim" "send-keys C-w 'L'" "swap-pane -U"
bind q if-shell "$is_vim" "send-keys C-w 'q'" "kill-pane"

bind C-l send-keys C-l

unbind z
bind f resize-pane -Z

bind -r + if-shell "$is_vim" "send-keys C-w '+'" "resize-pane -U"
bind -r - if-shell "$is_vim" "send-keys C-w '-'" "resize-pane -D"
bind -r < if-shell "$is_vim" "send-keys C-w '<'" "resize-pane -L"
bind -r > if-shell "$is_vim" "send-keys C-w '>'" "resize-pane -R"

set-option -g status on
set-option -g status-bg black
set-option -g status-fg yellow
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 120
set-option -g status-right-length 120
set-option -g status-left "#(~/.cache/tmux/plugins/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/.cache/tmux/plugins/tmux-powerline/powerline.sh right)"

set -g @tilish-default 'main-vertical'
set -g @continuum-boot 'on'
set -g @continuum-restore 'on'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'
set -g @yank_selection 'primary' # or 'primary' or 'secondary' or 'clipboard'
set -g @yank_selection_mouse 'primary' # or 'primary' or 'secondary' or 'clipboard'
# set -g @fpp-key 'g'
set -g @prefix_highlight_fg 'white'
set -g @prefix_highlight_bg 'blue'

set -g @plugin 'tmux-plugins/tpm'
# TODO Deprecated... migrate to powerline pending
set -g @plugin 'erikw/tmux-powerline'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect' # <pref> + C-s / C-r
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-sessionist' # <pref> + S-c / S-s
set -g @plugin 'tmux-plugins/tmux-logging' # <pref> + S-p / A-p / A-S-p / A-c
set -g @plugin 'tmux-plugins/tmux-yank' # <pref> + y / Y
set -g @plugin 'tmux-plugins/tmux-copycat' # <pref> + C-f / C-d / A-i
set -g @plugin 'carlocab/tmux-nvr'
# set -g @plugin 'jbnicolai/tmux-fpp' # <pref> + g

run -b '~/.cache/tmux/plugins/tpm/tpm' # <pref> + I

